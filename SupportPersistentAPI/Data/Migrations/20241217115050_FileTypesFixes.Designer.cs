// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SupportPersistentAPI.Data;

#nullable disable

namespace SupportPersistentAPI.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241217115050_FileTypesFixes")]
    partial class FileTypesFixes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SupportPersistentAPI.Data.Entities.FileInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Src")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("src");

                    b.Property<long?>("SupportChatMessageId")
                        .HasColumnType("bigint")
                        .HasColumnName("support_chat_message_id");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_file_infos");

                    b.HasIndex("SupportChatMessageId")
                        .HasDatabaseName("ix_file_infos_support_chat_message_id");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_file_infos_type_id");

                    b.ToTable("file_infos", (string)null);
                });

            modelBuilder.Entity("SupportPersistentAPI.Data.Entities.FileTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_file_types");

                    b.ToTable("file_types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "image"
                        },
                        new
                        {
                            Id = 2,
                            Type = "audio"
                        },
                        new
                        {
                            Id = 3,
                            Type = "video"
                        },
                        new
                        {
                            Id = 4,
                            Type = "file"
                        },
                        new
                        {
                            Id = 5,
                            Type = "document"
                        });
                });

            modelBuilder.Entity("SupportPersistentAPI.Data.Entities.SupportChatMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ChatSessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("chat_session_id");

                    b.Property<DateTimeOffset>("DateTimeSent")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time_sent");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<long>("SenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("sender_id");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sender_name");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_support_chat_messages");

                    b.HasIndex("ChatSessionId")
                        .HasDatabaseName("ix_support_chat_messages_chat_session_id");

                    b.ToTable("support_chat_messages", (string)null);
                });

            modelBuilder.Entity("SupportPersistentAPI.Data.Entities.SupportChatSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsAnswered")
                        .HasColumnType("boolean")
                        .HasColumnName("is_answered");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_support_chat_sessions");

                    b.ToTable("support_chat_sessions", (string)null);
                });

            modelBuilder.Entity("SupportPersistentAPI.Data.Entities.FileInfo", b =>
                {
                    b.HasOne("SupportPersistentAPI.Data.Entities.SupportChatMessage", null)
                        .WithMany("FileInfo")
                        .HasForeignKey("SupportChatMessageId")
                        .HasConstraintName("fk_file_infos_support_chat_messages_support_chat_message_id");

                    b.HasOne("SupportPersistentAPI.Data.Entities.FileTypeEntity", "TypeLookup")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_file_infos_file_types_type_id");

                    b.Navigation("TypeLookup");
                });

            modelBuilder.Entity("SupportPersistentAPI.Data.Entities.SupportChatMessage", b =>
                {
                    b.HasOne("SupportPersistentAPI.Data.Entities.SupportChatSession", "ChatSession")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_support_chat_messages_support_chat_sessions_chat_session_id");

                    b.Navigation("ChatSession");
                });

            modelBuilder.Entity("SupportPersistentAPI.Data.Entities.SupportChatMessage", b =>
                {
                    b.Navigation("FileInfo");
                });

            modelBuilder.Entity("SupportPersistentAPI.Data.Entities.SupportChatSession", b =>
                {
                    b.Navigation("ChatMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
