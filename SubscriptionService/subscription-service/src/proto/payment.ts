/**
 * This file is auto-generated by nestjs-proto-gen-ts
 */

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

// eslint-disable-next-line @typescript-eslint/no-namespace
export namespace payment {
  export interface PaymentService {
    processPayment(
      data: PaymentRequest,
      metadata?: Metadata,
      ...rest: any[]
    ): Observable<PaymentResponse>;
    compensatePayment(
      data: CompensationRequest,
      metadata?: Metadata,
      ...rest: any[]
    ): Observable<CompensationResponse>;
    getTransactionStatus(
      data: TransactionStatusRequest,
      metadata?: Metadata,
      ...rest: any[]
    ): Observable<TransactionStatusResponse>;
  }
  export enum Status {
    UNKNOWN = 0,
    PENDING = 1,
    SUCCESS = 2,
    FAILED = 3,
  }
  export interface Card {
    cardNumber?: string;
    cardOwner?: string;
    validThru?: string;
    cvc?: number;
  }
  export interface PaymentRequest {
    card?: payment.Card;
    userId?: number;
    amount?: number;
    currencyCode?: string;
    reason?: string;
  }
  export interface PaymentResponse {
    transactionId?: string;
    status?: payment.Status;
  }
  export interface CompensationRequest {
    transactionId?: string;
  }
  // tslint:disable-next-line:no-empty-interface
  // eslint-disable-next-line @typescript-eslint/no-empty-object-type
  export interface CompensationResponse {}
  export interface TransactionStatusRequest {
    transactionId?: string;
  }
  export interface TransactionStatusResponse {
    transactionId?: string;
    status?: payment.Status;
  }
}
