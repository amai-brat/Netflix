/**
 * @fileoverview gRPC-Web generated client stub for support_chat
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.31.0
// source: SupportChat.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as SupportChat_pb from './SupportChat_pb'; // proto import: "SupportChat.proto"


export class SupportChatClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorConnect = new grpcWeb.MethodDescriptor(
    '/support_chat.SupportChat/Connect',
    grpcWeb.MethodType.UNARY,
    SupportChat_pb.ConnectRequest,
    SupportChat_pb.ConnectResponse,
    (request: SupportChat_pb.ConnectRequest) => {
      return request.serializeBinary();
    },
    SupportChat_pb.ConnectResponse.deserializeBinary
  );

  connect(
    request: SupportChat_pb.ConnectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<SupportChat_pb.ConnectResponse>;

  connect(
    request: SupportChat_pb.ConnectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: SupportChat_pb.ConnectResponse) => void): grpcWeb.ClientReadableStream<SupportChat_pb.ConnectResponse>;

  connect(
    request: SupportChat_pb.ConnectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: SupportChat_pb.ConnectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/support_chat.SupportChat/Connect',
        request,
        metadata || {},
        this.methodDescriptorConnect,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/support_chat.SupportChat/Connect',
    request,
    metadata || {},
    this.methodDescriptorConnect);
  }

  methodDescriptorConnectToStream = new grpcWeb.MethodDescriptor(
    '/support_chat.SupportChat/ConnectToStream',
    grpcWeb.MethodType.SERVER_STREAMING,
    SupportChat_pb.ConnectToStreamRequest,
    SupportChat_pb.SupportChatMessage,
    (request: SupportChat_pb.ConnectToStreamRequest) => {
      return request.serializeBinary();
    },
    SupportChat_pb.SupportChatMessage.deserializeBinary
  );

  connectToStream(
    request: SupportChat_pb.ConnectToStreamRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<SupportChat_pb.SupportChatMessage> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/support_chat.SupportChat/ConnectToStream',
      request,
      metadata || {},
      this.methodDescriptorConnectToStream);
  }

  methodDescriptorSendMessage = new grpcWeb.MethodDescriptor(
    '/support_chat.SupportChat/SendMessage',
    grpcWeb.MethodType.UNARY,
    SupportChat_pb.SupportChatSendMessage,
    SupportChat_pb.SupportChatMessageAck,
    (request: SupportChat_pb.SupportChatSendMessage) => {
      return request.serializeBinary();
    },
    SupportChat_pb.SupportChatMessageAck.deserializeBinary
  );

  sendMessage(
    request: SupportChat_pb.SupportChatSendMessage,
    metadata?: grpcWeb.Metadata | null): Promise<SupportChat_pb.SupportChatMessageAck>;

  sendMessage(
    request: SupportChat_pb.SupportChatSendMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: SupportChat_pb.SupportChatMessageAck) => void): grpcWeb.ClientReadableStream<SupportChat_pb.SupportChatMessageAck>;

  sendMessage(
    request: SupportChat_pb.SupportChatSendMessage,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: SupportChat_pb.SupportChatMessageAck) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/support_chat.SupportChat/SendMessage',
        request,
        metadata || {},
        this.methodDescriptorSendMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/support_chat.SupportChat/SendMessage',
    request,
    metadata || {},
    this.methodDescriptorSendMessage);
  }

  methodDescriptorJoinSupportChat = new grpcWeb.MethodDescriptor(
    '/support_chat.SupportChat/JoinSupportChat',
    grpcWeb.MethodType.UNARY,
    SupportChat_pb.JoinSupportChatRequest,
    SupportChat_pb.JoinSupportChatResponse,
    (request: SupportChat_pb.JoinSupportChatRequest) => {
      return request.serializeBinary();
    },
    SupportChat_pb.JoinSupportChatResponse.deserializeBinary
  );

  joinSupportChat(
    request: SupportChat_pb.JoinSupportChatRequest,
    metadata?: grpcWeb.Metadata | null): Promise<SupportChat_pb.JoinSupportChatResponse>;

  joinSupportChat(
    request: SupportChat_pb.JoinSupportChatRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: SupportChat_pb.JoinSupportChatResponse) => void): grpcWeb.ClientReadableStream<SupportChat_pb.JoinSupportChatResponse>;

  joinSupportChat(
    request: SupportChat_pb.JoinSupportChatRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: SupportChat_pb.JoinSupportChatResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/support_chat.SupportChat/JoinSupportChat',
        request,
        metadata || {},
        this.methodDescriptorJoinSupportChat,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/support_chat.SupportChat/JoinSupportChat',
    request,
    metadata || {},
    this.methodDescriptorJoinSupportChat);
  }

  methodDescriptorLeaveSupportChat = new grpcWeb.MethodDescriptor(
    '/support_chat.SupportChat/LeaveSupportChat',
    grpcWeb.MethodType.UNARY,
    SupportChat_pb.LeaveSupportChatRequest,
    SupportChat_pb.LeaveSupportChatResponse,
    (request: SupportChat_pb.LeaveSupportChatRequest) => {
      return request.serializeBinary();
    },
    SupportChat_pb.LeaveSupportChatResponse.deserializeBinary
  );

  leaveSupportChat(
    request: SupportChat_pb.LeaveSupportChatRequest,
    metadata?: grpcWeb.Metadata | null): Promise<SupportChat_pb.LeaveSupportChatResponse>;

  leaveSupportChat(
    request: SupportChat_pb.LeaveSupportChatRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: SupportChat_pb.LeaveSupportChatResponse) => void): grpcWeb.ClientReadableStream<SupportChat_pb.LeaveSupportChatResponse>;

  leaveSupportChat(
    request: SupportChat_pb.LeaveSupportChatRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: SupportChat_pb.LeaveSupportChatResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/support_chat.SupportChat/LeaveSupportChat',
        request,
        metadata || {},
        this.methodDescriptorLeaveSupportChat,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/support_chat.SupportChat/LeaveSupportChat',
    request,
    metadata || {},
    this.methodDescriptorLeaveSupportChat);
  }

  methodDescriptorDisconnect = new grpcWeb.MethodDescriptor(
    '/support_chat.SupportChat/Disconnect',
    grpcWeb.MethodType.UNARY,
    SupportChat_pb.DisconnectRequest,
    SupportChat_pb.DisconnectResponse,
    (request: SupportChat_pb.DisconnectRequest) => {
      return request.serializeBinary();
    },
    SupportChat_pb.DisconnectResponse.deserializeBinary
  );

  disconnect(
    request: SupportChat_pb.DisconnectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<SupportChat_pb.DisconnectResponse>;

  disconnect(
    request: SupportChat_pb.DisconnectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: SupportChat_pb.DisconnectResponse) => void): grpcWeb.ClientReadableStream<SupportChat_pb.DisconnectResponse>;

  disconnect(
    request: SupportChat_pb.DisconnectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: SupportChat_pb.DisconnectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/support_chat.SupportChat/Disconnect',
        request,
        metadata || {},
        this.methodDescriptorDisconnect,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/support_chat.SupportChat/Disconnect',
    request,
    metadata || {},
    this.methodDescriptorDisconnect);
  }

}

